{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./product.service\";\nexport let BrandService = /*#__PURE__*/(() => {\n  var _class;\n  class BrandService {\n    constructor(productService) {\n      this.productService = productService;\n      this.brand1 = {\n        id: 0,\n        brandName: '',\n        categoryId: 0\n      };\n      this.brand = new BehaviorSubject(this.brand1);\n      this.categoryId = new BehaviorSubject(0);\n      this.categoryIdForBrand = new BehaviorSubject(0);\n      this.brandArr = new BehaviorSubject([]);\n    }\n    getAllBrand() {\n      this.productService.getAllBrand(this.categoryId.value).subscribe(resp => {\n        this.brandArr.next(resp);\n        console.log(this.categoryId.value);\n      });\n      return this.brandArr.asObservable();\n    }\n    addBrand() {\n      this.productService.addNewBrand(this.brand1).subscribe(resp => {\n        this.brand.next(resp);\n        console.log(resp);\n      });\n    }\n  }\n  _class = BrandService;\n  _class.ɵfac = function BrandService_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.ProductService));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac,\n    providedIn: 'root'\n  });\n  return BrandService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
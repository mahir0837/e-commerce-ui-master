{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Subject, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductService = /*#__PURE__*/(() => {\n  var _class;\n  class ProductService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this._refreshRequiered = new Subject();\n    }\n    get refresh() {\n      return this._refreshRequiered;\n    }\n    getUserDetails(userName) {\n      return this.httpClient.get(\"http://localhost:9090/userDetails/{userName}\");\n    }\n    addProduct(product) {\n      return this.httpClient.post(\"http://localhost:9090/product/addNewProduct\", product);\n    }\n    getProducts(pageNumber, searchKeyword = \"\") {\n      return this.httpClient.get(\"http://localhost:9090/product/getAllProducts?pageNumber=\" + pageNumber + \"&searchKey=\" + searchKeyword);\n    }\n    getAllProducts(pageNumber, searchKeyword = \"\", categoryId, productBrandId, selectedSortValue) {\n      return this.httpClient.get(\"http://localhost:9090/product/getAllProducts?pageNumber=\" + pageNumber + \"&searchKey=\" + searchKeyword + \"&categoryId=\" + categoryId + \"&productBrandId=\" + productBrandId + \"&selectedSortValue=\" + selectedSortValue);\n    }\n    getAllProductsBaseOnTheCategory(pageNumber, searchKeyword = \"\", categoryId) {\n      return this.httpClient.get(\"http://localhost:9090/product/getAllProducts?pageNumber=\" + pageNumber + \"&searchKey=\" + searchKeyword + \"&categoryId=\" + categoryId);\n    }\n    deleteProduct(productId) {\n      return this.httpClient.delete(\"http://localhost:9090/product/deleteProductDetails/\" + productId);\n    }\n    getProductDetailById(productId) {\n      return this.httpClient.get(\"http://localhost:9090/product/getProductDetailsById/\" + productId);\n    }\n    getProductDetails(isSingleProductChekout, productId) {\n      return this.httpClient.get(\"http://localhost:9090/product/getProductDetails/\" + isSingleProductChekout + \"/\" + productId);\n    }\n    placeOrder(orderDetails, isCartChekout) {\n      return this.httpClient.post(\"http://localhost:9090/orders/placeOrder/\" + isCartChekout, orderDetails);\n    }\n    addToCart(productId) {\n      return this.httpClient.get(\"http://localhost:9090/cart/addToCart/\" + productId).pipe(tap(() => {\n        this.refresh.next();\n      }));\n    }\n    getCartDetails() {\n      return this.httpClient.get(\"http://localhost:9090/cart/getCardDetails\");\n    }\n    deleteCartItem(cartId) {\n      return this.httpClient.delete(\"http://localhost:9090/cart/deleteCartItem/\" + cartId);\n    }\n    getOrderDetails() {\n      return this.httpClient.get(\"http://localhost:9090/orders/getOrderDetails\");\n    }\n    getAllOrderDetailsForAdmin(orderStatus) {\n      return this.httpClient.get(\"http://localhost:9090/orders/getAllOrderDetails/\" + orderStatus);\n    }\n    markOrderAsDelivered(orderId, addDays) {\n      return this.httpClient.get(\"http://localhost:9090/orders/markOrderAsDelivered/\" + orderId + '/' + addDays);\n    }\n    markOrderAsProcessing(orderId, addDays) {\n      return this.httpClient.get(\"http://localhost:9090/orders/markOrderAsProcessing/\" + orderId + '/' + addDays);\n    }\n    markOrderAsQualityCheck(orderId, addDays) {\n      return this.httpClient.get(\"http://localhost:9090/orders/markOrderAsQualityCheck/\" + orderId + '/' + addDays);\n    }\n    createTransection(orderData, userName, amount) {\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n      return this.httpClient.post(\"http://localhost:9090/orders/createTransection/\" + userName + \"/\" + amount, JSON.stringify(orderData), {\n        headers\n      });\n    }\n    addCategory(category) {\n      return this.httpClient.post(\"http://localhost:9090/category/addNewCategory\", category);\n    }\n    getAllCategories() {\n      return this.httpClient.get(\"http://localhost:9090/category/getAllCategories\");\n    }\n    getCategoryById(id) {\n      return this.httpClient.get(\"http://localhost:9090/category/getCategoryById/\" + id);\n    }\n    deleteCategory(id) {\n      return this.httpClient.delete(\"http://localhost:9090/category/deleteCategory/\" + id);\n    }\n    getWishList() {\n      return this.httpClient.get(\"http://localhost:9090/wishlist/getAllWishList\");\n    }\n    addNewWishList(productId) {\n      return this.httpClient.get(\"http://localhost:9090/wishlist/addWishList?productId=\" + productId);\n    }\n    deleteWishListItem(wishListId) {\n      return this.httpClient.delete(\"http://localhost:9090/wishlist/delete/\" + wishListId);\n    }\n    getAllBrand(categoryId) {\n      return this.httpClient.get(\"http://localhost:9090/brand/getAllBrand?categoryId=\" + categoryId);\n    }\n    addNewBrand(brand) {\n      return this.httpClient.post(\"http://localhost:9090/brand/addBrand\", brand);\n    }\n  }\n  _class = ProductService;\n  _class.ɵfac = function ProductService_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
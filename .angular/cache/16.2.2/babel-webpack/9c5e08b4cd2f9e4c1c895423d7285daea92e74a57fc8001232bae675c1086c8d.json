{"ast":null,"code":"var _class;\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./product.service\";\nexport class BrandService {\n  constructor(productService) {\n    this.productService = productService;\n    this.brand1 = {\n      id: 0,\n      brandName: '',\n      categoryId: 0\n    };\n    this.brand = new BehaviorSubject(this.brand1);\n    this.categoryId = new BehaviorSubject(0);\n    this.categoryIdForBrand = new BehaviorSubject(0);\n    this.brandArr = new BehaviorSubject([]);\n  }\n  getAllBrand() {\n    this.productService.getAllBrand(this.categoryId.value).subscribe(resp => {\n      this.brandArr.next(resp);\n      console.log(this.categoryId.value);\n    });\n    return this.brandArr.asObservable();\n  }\n  addBrand() {\n    this.productService.addNewBrand(this.brand1).subscribe(resp => {\n      this.brand.next(resp);\n      console.log(resp);\n    });\n  }\n}\n_class = BrandService;\n_class.ɵfac = function BrandService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.ProductService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","BrandService","constructor","productService","brand1","id","brandName","categoryId","brand","categoryIdForBrand","brandArr","getAllBrand","value","subscribe","resp","next","console","log","asObservable","addBrand","addNewBrand","i0","ɵɵinject","i1","ProductService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Owner\\E-CommercePRoject\\e-commerce-ui-master\\src\\app\\_services\\brand.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ProductService } from './product.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { Brand } from '../_model/brand-modal';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrandService {\n\n  brand1:Brand={\n    id:0,\n    brandName:'',\n    categoryId:0\n  }\n  public brand=new BehaviorSubject<Brand>(this.brand1);\n  public categoryId=new BehaviorSubject<number>(0);\n  public categoryIdForBrand=new BehaviorSubject<number>(0);\n  public brandArr=new BehaviorSubject<Brand[]>([]);\n  constructor(private productService:ProductService) { }\n\n  getAllBrand(){\n    this.productService.getAllBrand(this.categoryId.value).subscribe(resp=>{\n      this.brandArr.next(resp);\n      console.log(this.categoryId.value);\n      \n    });\n    return this.brandArr.asObservable();\n  }\n\n  addBrand(){\n    this.productService.addNewBrand(this.brand1).subscribe(resp=>{\n      this.brand.next(resp);\n      console.log(resp);\n      \n    });\n  }\n \n}"],"mappings":";AAEA,SAASA,eAAe,QAAQ,MAAM;;;AAMtC,OAAM,MAAOC,YAAY;EAWvBC,YAAoBC,cAA6B;IAA7B,KAAAA,cAAc,GAAdA,cAAc;IATlC,KAAAC,MAAM,GAAO;MACXC,EAAE,EAAC,CAAC;MACJC,SAAS,EAAC,EAAE;MACZC,UAAU,EAAC;KACZ;IACM,KAAAC,KAAK,GAAC,IAAIR,eAAe,CAAQ,IAAI,CAACI,MAAM,CAAC;IAC7C,KAAAG,UAAU,GAAC,IAAIP,eAAe,CAAS,CAAC,CAAC;IACzC,KAAAS,kBAAkB,GAAC,IAAIT,eAAe,CAAS,CAAC,CAAC;IACjD,KAAAU,QAAQ,GAAC,IAAIV,eAAe,CAAU,EAAE,CAAC;EACK;EAErDW,WAAWA,CAAA;IACT,IAAI,CAACR,cAAc,CAACQ,WAAW,CAAC,IAAI,CAACJ,UAAU,CAACK,KAAK,CAAC,CAACC,SAAS,CAACC,IAAI,IAAE;MACrE,IAAI,CAACJ,QAAQ,CAACK,IAAI,CAACD,IAAI,CAAC;MACxBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,UAAU,CAACK,KAAK,CAAC;IAEpC,CAAC,CAAC;IACF,OAAO,IAAI,CAACF,QAAQ,CAACQ,YAAY,EAAE;EACrC;EAEAC,QAAQA,CAAA;IACN,IAAI,CAAChB,cAAc,CAACiB,WAAW,CAAC,IAAI,CAAChB,MAAM,CAAC,CAACS,SAAS,CAACC,IAAI,IAAE;MAC3D,IAAI,CAACN,KAAK,CAACO,IAAI,CAACD,IAAI,CAAC;MACrBE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IAEnB,CAAC,CAAC;EACJ;;SA5BWb,YAAY;;mBAAZA,MAAY,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;;SAAZvB,MAAY;EAAAwB,OAAA,EAAZxB,MAAY,CAAAyB,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
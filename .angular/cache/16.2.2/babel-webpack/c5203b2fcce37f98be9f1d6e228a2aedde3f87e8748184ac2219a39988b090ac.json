{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../_services/product.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nfunction BuyProductComponent_tr_41_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"select\", 20, 21);\n    i0.ɵɵlistener(\"change\", function BuyProductComponent_tr_41_Template_select_change_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const p_r2 = restoredCtx.$implicit;\n      const _r3 = i0.ɵɵreference(7);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onQuantityChanged(_r3.value, p_r2.productId));\n    });\n    i0.ɵɵelementStart(8, \"option\", 22);\n    i0.ɵɵtext(9, \"1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"option\", 23);\n    i0.ɵɵtext(11, \"2\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"option\", 24);\n    i0.ɵɵtext(13, \"3\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const p_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(p_r2.productName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"$\", p_r2.productDiscountedPrice, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.getQoantityForProduct(p_r2.productId));\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.getCalculatedTotal(p_r2.productId, p_r2.productDiscountedPrice), \" \");\n  }\n}\nexport let BuyProductComponent = /*#__PURE__*/(() => {\n  var _class;\n  class BuyProductComponent {\n    constructor(activatedRoute, productService, roeter) {\n      this.activatedRoute = activatedRoute;\n      this.productService = productService;\n      this.roeter = roeter;\n      this.isSingleProductChekout = '';\n      this.productDetails = [];\n      this.orderDetails = {\n        fullName: '',\n        fullAddress: '',\n        contactNumber: '',\n        alternateContactNumber: '',\n        paymentMethod: '',\n        orderDate: new Date(),\n        trackingNumber: '',\n        orderProductQuantityList: []\n      };\n    }\n    ngAfterViewInit() {\n      this.stripe = Stripe('pk_test_51NR2GTK83yIBaSPaavAFcXFLvfTenmfPZqfCEvetZDdpKa1YX1MuvpKulveC60XsNG13JXrRCNnKiYB0iIFBNElh00x7kKa1sv');\n      this.elements = this.stripe.elements();\n      var style = {\n        base: {\n          color: '#32325d',\n          fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n          fontSmoothing: 'antialiased',\n          fontSize: '16px',\n          '::placeholder': {\n            color: '#aab7c4'\n          }\n        },\n        invalid: {\n          color: '#fa755a',\n          iconColor: '#fa755a'\n        }\n      };\n      var card = this.elements.create('card', {\n        style: style\n      });\n      card.mount('#card-element');\n      var card = this.elements.create('card', {\n        style: style\n      });\n      // var card = this.elements.create('card');\n      card.mount('#card-element');\n    }\n    ngOnInit() {\n      this.productDetails = this.activatedRoute.snapshot.data['productDetails'];\n      this.isSingleProductChekout = this.activatedRoute.snapshot.paramMap.get('isSingleProductChekout');\n      this.productDetails.forEach(x => this.orderDetails.orderProductQuantityList.push({\n        productId: x.productId,\n        quantity: 1\n      }));\n      console.log(this.productDetails);\n      console.log(this.orderDetails);\n    }\n    placeOrder(orderForm) {\n      this.productService.placeOrder(this.orderDetails, this.isSingleProductChekout).subscribe(resp => {\n        console.log(resp);\n        orderForm.reset();\n        this.roeter.navigate(['/orderConfirm']);\n      }, err => {\n        console.log(err);\n      });\n    }\n    getQoantityForProduct(productId) {\n      const filterProduct = this.orderDetails.orderProductQuantityList.filter(pq => pq.productId === productId);\n      return filterProduct[0].quantity;\n    }\n    getCalculatedTotal(productId, productDiscountedPrice) {\n      const qty = this.getQoantityForProduct(productId);\n      return productDiscountedPrice * qty;\n    }\n    onQuantityChanged(qty, productId) {\n      this.orderDetails.orderProductQuantityList.filter(p => p.productId === productId)[0].quantity = qty;\n    }\n    getCalculatedGrandTotal() {\n      let grandTotal = 0;\n      this.orderDetails.orderProductQuantityList.forEach(p => {\n        let price = this.productDetails.filter(product => product.productId === p.productId)[0].productDiscountedPrice;\n        grandTotal = grandTotal + price * p.quantity;\n      });\n      return (grandTotal * 1.13).toFixed(2);\n    }\n    getCalculatedTax() {\n      let grandTotal = 0;\n      this.orderDetails.orderProductQuantityList.forEach(p => {\n        const price = this.productDetails.filter(product => product.productId === p.productId)[0].productDiscountedPrice;\n        grandTotal = grandTotal + price * p.quantity;\n      });\n      return (grandTotal * 13 / 100).toFixed(2);\n    }\n    createTransectionAndPlaceOrder(orderForm) {\n      let amount = Number(this.getCalculatedGrandTotal());\n      const userName = this.orderDetails.fullName;\n      this.stripe.createPaymentMethod({\n        type: 'card',\n        card: this.elements.getElement('card')\n      }).then(result => {\n        if (result.error) {\n          console.error(result.error);\n        } else {\n          this.productService.createTransection(result.paymentMethod.id, userName, amount).subscribe(resp => {\n            console.log(resp);\n            this.openStripePaymentModal(resp, orderForm);\n          }, err => {\n            console.log(err);\n          });\n        }\n      });\n    }\n    openStripePaymentModal(response, orderForm) {\n      this.stripe.handleCardPayment(response.clientSecret).then(result => {\n        if (result.error) {\n          console.error(result.error);\n        } else {\n          if (result.paymentIntent.status === 'succeeded') {\n            this.placeOrder(orderForm);\n          }\n        }\n      });\n    }\n  }\n  _class = BuyProductComponent;\n  _class.ɵfac = function BuyProductComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ProductService), i0.ɵɵdirectiveInject(i1.Router));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-buy-product\"]],\n    decls: 56,\n    vars: 7,\n    consts: [[1, \"container\", \"mt-5\"], [1, \"card\"], [1, \"row\", \"p-3\"], [1, \"col-6\"], [3, \"ngSubmit\"], [\"orderForm\", \"ngForm\"], [\"appearance\", \"outline\", 1, \"w-100\"], [\"matInput\", \"\", \"placeholder\", \"Full Name\", \"name\", \"fullName\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"placeholder\", \"Full Address\", \"name\", \"fullAddress\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"placeholder\", \"Contact Number\", \"name\", \"contactNumber\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"placeholder\", \"Alternate Contact Number\", \"name\", \"alternateContactNumber\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"card-element\", 1, \"w-100\", \"mt-3\", \"colorful-card-element\"], [\"src\", \"/assets/img/cards-alt.png\", \"alt\", \"Visa Logo\", 1, \"credit-card-logo\"], [\"id\", \"card-errors\", 1, \"text-danger\", \"mt-2\", \"colorful-text\"], [\"align\", \"right\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"d-block\", \"w-100\", \"mt-3\", \"colorful-button\", 3, \"click\"], [1, \"table\"], [1, \"thead\"], [1, \"tbody\"], [4, \"ngFor\", \"ngForOf\"], [1, \"form-select\", 3, \"ngModel\", \"change\"], [\"quantity\", \"\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"value\", \"3\"]],\n    template: function BuyProductComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r6 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"form\", 4, 5);\n        i0.ɵɵlistener(\"ngSubmit\", function BuyProductComponent_Template_form_ngSubmit_4_listener() {\n          i0.ɵɵrestoreView(_r6);\n          const _r0 = i0.ɵɵreference(5);\n          return i0.ɵɵresetView(ctx.createTransectionAndPlaceOrder(_r0));\n        });\n        i0.ɵɵelementStart(6, \"mat-form-field\", 6)(7, \"mat-label\");\n        i0.ɵɵtext(8, \"Full Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function BuyProductComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.orderDetails.fullName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"mat-form-field\", 6)(11, \"mat-label\");\n        i0.ɵɵtext(12, \"Full Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function BuyProductComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.orderDetails.fullAddress = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"mat-form-field\", 6)(15, \"mat-label\");\n        i0.ɵɵtext(16, \"Contact Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function BuyProductComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.orderDetails.contactNumber = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"mat-form-field\", 6)(19, \"mat-label\");\n        i0.ɵɵtext(20, \"Alternate Contact Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function BuyProductComponent_Template_input_ngModelChange_21_listener($event) {\n          return ctx.orderDetails.alternateContactNumber = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 11);\n        i0.ɵɵelement(23, \"img\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"div\", 13);\n        i0.ɵɵelementStart(25, \"div\", 14)(26, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function BuyProductComponent_Template_button_click_26_listener() {\n          i0.ɵɵrestoreView(_r6);\n          const _r0 = i0.ɵɵreference(5);\n          return i0.ɵɵresetView(ctx.placeOrder(_r0));\n        });\n        i0.ɵɵtext(27, \" Place Order \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(28, \"div\", 3)(29, \"table\", 16)(30, \"thead\", 17)(31, \"tr\")(32, \"th\");\n        i0.ɵɵtext(33, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"th\");\n        i0.ɵɵtext(35, \"Amount\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"th\");\n        i0.ɵɵtext(37, \"Quantity\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"th\");\n        i0.ɵɵtext(39, \"Total\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(40, \"tbody\", 18);\n        i0.ɵɵtemplate(41, BuyProductComponent_tr_41_Template, 16, 4, \"tr\", 19);\n        i0.ɵɵelementStart(42, \"tr\");\n        i0.ɵɵelement(43, \"td\")(44, \"td\");\n        i0.ɵɵelementStart(45, \"td\");\n        i0.ɵɵtext(46, \"Tax\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"td\");\n        i0.ɵɵtext(48);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(49, \"tr\");\n        i0.ɵɵelement(50, \"td\")(51, \"td\");\n        i0.ɵɵelementStart(52, \"td\");\n        i0.ɵɵtext(53, \"Total\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(54, \"td\");\n        i0.ɵɵtext(55);\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.orderDetails.fullName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.orderDetails.fullAddress);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.orderDetails.contactNumber);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.orderDetails.alternateContactNumber);\n        i0.ɵɵadvance(20);\n        i0.ɵɵproperty(\"ngForOf\", ctx.productDetails);\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate(ctx.getCalculatedTax());\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate(ctx.getCalculatedGrandTotal());\n      }\n    },\n    dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm, i5.MatFormField, i5.MatLabel, i6.MatInput],\n    styles: [\".credit-card-logo[_ngcontent-%COMP%]{width:60px;height:auto;margin-right:10px}.colorful-card[_ngcontent-%COMP%]{background-color:#ff6f61;border:2px solid #ff6f61}.colorful-label[_ngcontent-%COMP%]{color:#ff6f61}.colorful-card-element[_ngcontent-%COMP%]{border:2px solid;padding:1rem}.colorful-text[_ngcontent-%COMP%]{color:#ff6f61}.colorful-input[_ngcontent-%COMP%]{background-color:#ff6f61;color:#fff;border:2px solid #ff6f61}.colorful-button[_ngcontent-%COMP%]{background-color:#ff6f61;color:#fff;border:none;transition:background-color .3s}.colorful-button[_ngcontent-%COMP%]:hover{background-color:#ff5733}#zip-button[_ngcontent-%COMP%]{display:none}\"]\n  });\n  return BuyProductComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}